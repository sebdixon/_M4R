# conda deactivate
# conda activate base
import os
import sys
import numpy as np

parent_dir = os.path.abspath(
    os.path.join(
        os.path.dirname(__file__), '..'))
sys.path.append(parent_dir)

from evaluate_posteriors import evaluate_c2st

def evaluate_source_posteriors(
        reference_posterior_filename: str = 'xspec_outputs/ciao_posterior_samples_AMHMCMC.npy',
        source_posterior_filename_func: callable = lambda round: f'xspec_outputs/ciao_theta_{round}.npy'
) -> None:
    """
    Evaluate the posteriors generated by the source analysis.
    """
    scores = []
    reference_posterior_samples = np.load(reference_posterior_filename)
    for round in range(2, 12):
        source_posterior_samples = np.load(source_posterior_filename_func(round))
        scores.append(
            evaluate_c2st(
                reference_posterior_samples,
                source_posterior_samples,
                0
            )
        )
    return scores


if __name__ == '__main__':
    scores = evaluate_source_posteriors()